name: CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: yourusername/elisa-secure-access
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=sha,format=short
      
      - name: Build and push API image
        uses: docker/build-push-action@v4
        with:
          context: ./api
          push: true
          tags: ${{ steps.meta.outputs.tags }}-api
          labels: ${{ steps.meta.outputs.labels }}
          target: production
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push Frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./elisa-secure-access
          push: true
          tags: ${{ steps.meta.outputs.tags }}-frontend
          labels: ${{ steps.meta.outputs.labels }}
          target: production
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/elisa-secure-access
            
            # Pull latest code
            git pull
            
            # Pull latest Docker images
            docker pull yourusername/elisa-secure-access:${{ github.sha }}-api
            docker pull yourusername/elisa-secure-access:${{ github.sha }}-frontend
            
            # Update image tags in docker-compose file
            sed -i "s|image: yourusername/elisa-secure-access:.*-api|image: yourusername/elisa-secure-access:${{ github.sha }}-api|g" docker-compose.prod.yml
            sed -i "s|image: yourusername/elisa-secure-access:.*-frontend|image: yourusername/elisa-secure-access:${{ github.sha }}-frontend|g" docker-compose.prod.yml
            
            # Deploy with zero downtime
            docker-compose -f docker-compose.prod.yml up -d --no-deps api
            docker-compose -f docker-compose.prod.yml up -d --no-deps frontend
            
            # Clean up old images
            docker image prune -af --filter "until=24h"
      
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
